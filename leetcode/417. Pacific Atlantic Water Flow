public class Solution {
    public List<int[]> pacificAtlantic(int[][] matrix) {
        List<int[]> rst = new ArrayList<int[]>();
        if(matrix.length == 0 || matrix[0].length == 0)
            return rst;
        int m = matrix.length;
        int n = matrix[0].length;
        boolean[][] pac = new boolean[m][n];
        boolean[][] atl = new boolean[m][n];
        for(int i = 0; i < m; i++){
            source(matrix, pac, i, 0, Integer.MIN_VALUE);
            source(matrix, atl, i, n-1, Integer.MIN_VALUE);
        }
        for(int i = 0; i < n; i++){
            source(matrix, pac, 0, i, Integer.MIN_VALUE);
            source(matrix, atl, m-1, i, Integer.MIN_VALUE);
        }
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(pac[i][j] && atl[i][j]){
                    rst.add(new int[]{i,j});
                }
            }
        }
        return rst;
        
    }
    
    public void source(int[][] matrix, boolean[][] target, int x, int y, int h){
        if(x < 0 || x >= matrix.length || y < 0 || y >=matrix[0].length|| target[x][y] || matrix[x][y] < h){
            return;
        }
        target[x][y] = true;
        source(matrix, target, x-1, y, matrix[x][y]);
        source(matrix, target, x+1, y, matrix[x][y]);
        source(matrix, target, x, y-1, matrix[x][y]);
        source(matrix, target, x, y+1, matrix[x][y]);
    }
}