public class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
     List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> l = new ArrayList<Integer>();
        boolean[] b = new boolean[candidates.length];
        Arrays.sort(candidates);
        comn(res, l, candidates, 0 , target, 0, b);
        return res;
    }
    
    public void comn(List<List<Integer>> res,  List<Integer> l, int[] a, int sum, int target, int start, boolean[] b){
        for(int i = start; i < a.length; i++){
            if(i>start && a[i] == a[i-1] && !b[i]) continue;
            int s = sum + a[i];
            //System.out.println("try " + a[i]);
            if(s == target){
                l.add(a[i]);
                res.add(new ArrayList<Integer>(l));
                l.remove(l.size() - 1);
            }
            else if(s > target)
                continue;
            else if(s < target){
                l.add(a[i]);
                b[i] = true;
                comn(res, l, a, s, target, i+1, b);
                l.remove(l.size() - 1);
                b[i] = false;
            }
        }
    }
}