class Solution {
    public int maximalSquare(char[][] matrix) {
        int m = matrix.length;
        if(m == 0) return 0;
        int n = matrix[0].length;
        if(n == 0) return 0;
        int[][] left = new int[m][n];
        int[][] up = new int[m][n];
        int[][] area = new int[m][n];
        int res = 0;
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][j] == '1'){
                    left[i][j] = 1 + (j > 0 ? left[i][j - 1]:0);
                    up[i][j] = 1 + (i > 0 ? up[i - 1][j]:0); 
                }
                else{
                    left[i][j] = 0;
                    up[i][j] = 0;
                }
            }
        }
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                int potent = Math.min(left[i][j], up[i][j]);
                int last = (i > 0 && j > 0) ? area[i - 1][j - 1] + 1: 1;
                int real = Math.min(last, potent);
                area[i][j] = real;
                res = Math.max(real, res);
            }
        }
        return res * res;
        
    }
}