<<<<<<< HEAD
public class Solution {
    public int getMoneyAmount(int n) {
        int[][] m = new int[n+2][n+2];
        for(int len = 1; len <= n; len ++){
            for(int from = 1, to = from + len; to <= n; from++, to++){
                m[from][to] = Integer.MAX_VALUE;
                for(int k = from; k <= to && to <= n; k++){
                    m[from][to] = Math.min(m[from][to], k + Math.max(m[from][k-1], m[k+1][to] ));
                }
            }
        }
        return m[1][n];
    }
=======
public class Solution {
    public int getMoneyAmount(int n) {
        int[][] m = new int[n+2][n+2];
        for(int len = 1; len <= n; len ++){
            for(int from = 1, to = from + len; to <= n; from++, to++){
                m[from][to] = Integer.MAX_VALUE;
                for(int k = from; k <= to && to <= n; k++){
                    m[from][to] = Math.min(m[from][to], k + Math.max(m[from][k-1], m[k+1][to] ));
                }
            }
        }
        return m[1][n];
    }
>>>>>>> 6e4d1d48aef99a3634c1eee9ef4b123e24e99e4d
}