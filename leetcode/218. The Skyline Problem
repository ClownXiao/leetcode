class Solution {
    public List<int[]> getSkyline(int[][] buildings) {
        PriorityQueue<int[]> height = new PriorityQueue<>((int[] a, int[] b) -> a[0] == b[0] ? a[1] - b[1]: a[0] - b[0]);
        for(int[] b: buildings){
            height.offer(new int[]{b[0], -b[2]});
            height.offer(new int[]{b[1], b[2]});
        }
        
        PriorityQueue<Integer> row = new PriorityQueue<>((a, b) -> b - a);
        List<int[]> res = new ArrayList<>();
        row.offer(0);
        int pre = 0;
        while(!height.isEmpty()){
            int[] b = height.poll();
            if(b[1] < 0)
                row.offer(-b[1]);
            else
                row.remove(b[1]);
            int cur = row.peek();
            if(cur != pre){
                res.add(new int[]{b[0], cur});
                pre = cur;
            }
        }
        return res;
        
    }
}