public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
          int m = nums1.length;
		 int n = nums2.length;
		 if (m < n) return findMedianSortedArrays(nums2, nums1);
		 double l1,l2,r1,r2;
		 int mid1,mid2;
		 int lp = 0;
		 int hp = 2 * n;
		 while(lp <= hp){
			 mid2 = (lp + hp)/2;
			 mid1 = (m + n) - mid2;
			 
			 l1 = (mid1==0)?Integer.MIN_VALUE:nums1[(mid1-1)/2];
			 l2 = (mid2==0)?Integer.MIN_VALUE:nums2[(mid2-1)/2];
			 r1 = (mid1==m*2)?Integer.MAX_VALUE:nums1[mid1/2];
			 r2 = (mid2==n*2)?Integer.MAX_VALUE:nums2[mid2/2];
			 
			 if(l1>r2) lp = mid2 + 1;
			 else if(l2 > r1) hp = mid2 - 1;
			 else return (Math.max(l1, l2) + Math.min(r1, r2))/2;
			 }
		 return 0;
    }
}