class Solution {
    int[] ii = {0, 0, 1, -1};
    int[] jj = {1, -1, 0, 0};
    public void wallsAndGates(int[][] rooms) {
        int m = rooms.length;
        if(m == 0) return;
        int n = rooms[0].length;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(rooms[i][j] == 0)
                    dfs(rooms, i, j, 1, m, n);
            }
        }
    }
    
    public void dfs(int[][] rooms, int i, int j, int d, int m, int n){
        for(int k = 0; k < 4; k++){
            int x = i + ii[k];
            int y = j + jj[k];
            if(x < 0 || x >= m || y < 0 || y >= n || rooms[x][y] <= d) continue;
            rooms[x][y] = d;
            //System.out.println(x + "," + y + ":" + d);
            dfs(rooms, x, y, d + 1, m, n);
            
        }
    }
}