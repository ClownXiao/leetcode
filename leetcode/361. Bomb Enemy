public class Solution {
    public int maxKilledEnemies(char[][] grid) {
        int m = grid.length;
        if(m == 0) return 0;
        int n =grid[0].length;
        if(n == 0) return 0;
        int row = 0;
        int[] col = new int[n];
        int max = 0;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(j == 0 || grid[i][j-1] == 'W')
                    row = killRowE(grid, i, j);
                if(i == 0 || grid[i-1][j] == 'W')
                    col[j] = killColE(grid, i, j);
                if(grid[i][j] == '0'){
                    max = Math.max(max, row + col[j]);
                }
            }
        }
        return max;
        
    }
    
    public int killRowE(char[][] grid, int i, int j){
        int n = 0;
        while(j < grid[0].length && grid[i][j] != 'W' ){
            if(grid[i][j] == 'E') n++;
            j++;
        }
        return n;
    }
    
    public int killColE(char[][] grid, int i, int j){
        int n = 0;
        while(i < grid.length && grid[i][j] != 'W' ){
            if(grid[i][j] == 'E') n++;
            i++;
        }
        return n;
    }
}