public class Solution {
    public long[] sum;
    public int countRangeSum(int[] nums, int lower, int upper) {
        sum = new long[nums.length+1];
        //sum[0] = 0;
        for(int i = 0; i < nums.length; i++){
            sum[i+1] = sum[i] + nums[i];
        }
        return count(0, nums.length+1, lower, upper);
    }
    
    public int count( int l, int h, int lower, int upper){
        //System.out.println(h-1);
        if(h - l <= 1) return 0;
        int count = 0;
        int mid = l + (h - l)/2;
        count = count(l, mid, lower, upper) + count( mid, h, lower, upper);
        int t = mid, k = mid, j = mid;
        long[] cache = new long[h-l+1];
        
        for(int i = l, r = 0; i < mid; i++, r++){
            while( k < h && sum[k] - sum[i] < lower) k++;
            while( t < h && sum[t] - sum[i] <= upper) t++;
            while( j < h && sum[j] < sum[i] ) cache[r++] = sum[j++];
            cache[r] = sum[i];
            count += t - k;
        }
        System.arraycopy(cache, 0, sum, l, j - l);
        return count;
    }
}