public class Solution {
    public int[] maxNumber(int[] nums1, int[] nums2, int k) {
        int[] res = new int[k];
        int[][] sub_max1 = sub_max(nums1);
        int[][] sub_max2 = sub_max(nums2);
        int len1 = nums1.length - 1, len2 = nums2.length - 1;
        int i1 = 0, j1 = len1, i2 = 0, j2 = len2;
        int i11 = 0, i22 = 0;
        int n1, n2;
        f1: for(int t = 0; t < k; t++){
            if(j1 < 0) j1 = 0;
            if(j2 < 0) j2 = 0;
            if(i1 <= len1){
                i11 = sub_max1[i1][j1];
                n1 = nums1[i11];
            }
            else
                n1 = Integer.MIN_VALUE;
            if(i2 <= len2){
                i22 = sub_max2[i2][j2];
                n2 = nums2[i22];
            }
            else
                n2 = Integer.MIN_VALUE;
                
            //System.out.println("num1 " + n1 + "  num2   " + n2);
            if(n1 > n2){
                
                //if(len1 - j1 + len2 -] j2 - 2 >= k - t - 1)
                if(len1 - i11 + len2 - i2 + 2 >= k - t){
                    res[t] = nums1[i11];
                    i1 = i11 + 1;
                    j1 = len1;
                    //System.out.println("chose1  " + res[t]);
                }
                else{
                    j1 = i11 -  1;
                    t--;
                    continue;
                }
            }
            else if(n1 < n2){
                if(len1 - i1 + len2 - i22 + 2>= k - t){
                    res[t] = nums2[i22];
                    i2 = i22 + 1;
                    j2 = len2;
                    //System.out.println("chose2  " + res[t]);
                }
                else{
                    j2 = i22 -  1;
                    t--;
                    continue;
                }
            }
            else{
                if(len1 - i11 + len2 - i22 >= k - t - 2){
                    //System.out.println("choseboth");
                    if(i22 == len2 || nums1[sub_max1[i11+1][j1]] > nums2[sub_max2[i22+1][j2]]){
                    res[t] = nums1[i11];
                    i1 = i11 + 1;
                    j1 = len1;
                    continue;
                    }
                    
                    res[t] = nums2[i22];
                    i2 = i22 + 1;
                    j2 = len2;
                }
                else if(len1 - i11 + len2 - i2  >= k - t - 2 && len1 - i1 + len2 - i22  < k - t - 2){
                    //System.out.println("chose 1");
                    res[t] = nums1[i11];
                    i1 = i11 + 1;
                    j1 = len1;
                    continue;
                }
                else if(len1 - i11 + len2 - i2  < k - t - 2 && len1 - i1 + len2 - i22  >= k - t - 2){
                    res[t] = nums2[i22];
                    i2 = i22 + 1;
                    j2 = len2;
                    //System.out.println("chose2  " + res[t]);
                }
                else{
                    //System.out.println("fuck  ");
                    res[t] = nums1[i11]; 
                    int i111 = i11;
                    int i222 = i22;
                    
                    while(nums1[sub_max1[i1][i111]] == nums2[sub_max2[i2][i222]]){
                        i111--;
                        i222--;
                        //System.out.println(i111 + "fuck  " + i222);
                        if(i111 < 0){
                            i1 = i11 + 1;
                            j1 = len1;
                            continue f1;
                        }
                        if(i222 < 0){
                            i2 = i22 + 1;
                            j2 = len2;
                            continue f1;
                        }
                            
                    }
                    if(nums1[sub_max1[i1][i111]] > nums2[sub_max2[i2][i222]]){
                        //System.out.println("chose2  " + res[t]);
                        i2 = i22 + 1;
                        j2 = len2;
                    }
                    else{
                        //System.out.println("chose1  " + res[t]);
                        i1 = i11 + 1;
                        j1 = len1;
                    }
                }
            }
            //System.out.println("choose" + res[t]);
        }
        return res;
    }
    
    public int[][] sub_max(int[] a){
        int[][] sub_max = new int[a.length+1][a.length+1];
        sub_max[a.length][a.length] = 0;
        for(int i = 0; i < a.length; i++){
            sub_max[i][i] = i;
            for(int j = i+1; j < a.length; j++){
                if(a[sub_max[i][j-1]] >= a[j])
                    sub_max[i][j] = sub_max[i][j-1];
                else
                    sub_max[i][j] = j;
            }
        }
        return sub_max;
    }
}