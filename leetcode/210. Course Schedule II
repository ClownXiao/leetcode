class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] res = new int[numCourses];
        int[] degree = new int[numCourses];
        List<Integer>[] child = new ArrayList[numCourses];
        for(int i = 0; i < numCourses; i++) child[i] = new ArrayList<>();
        
        for(int[] pre: prerequisites){
            child[pre[1]].add(pre[0]);
            degree[pre[0]]++;
        }
        
        Queue<Integer> q = new LinkedList<>();
        for(int i = 0; i < numCourses; i++)
            if(degree[i] == 0) q.offer(i);
        
        
        
        int j = 0;
        while(!q.isEmpty()){
            int ready = q.poll();
            res[j++] = ready;
            for(int next: child[ready]){
                if(--degree[next] == 0) q.offer(next);
            }
        }
        
        return j == numCourses? res: new int[0];
    }
}