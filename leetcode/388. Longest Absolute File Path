public class Solution {
    public int lengthLongestPath(String input) {
        String[] sa = input.split("\n");
        Stack<String> st = new Stack<String>();
        int level = -1, max = 0, len = 0;
        String s;
        for( int i = 0; i < sa.length; i++){
            if(level == -1){
                st.push(sa[i]);
                len += sa[i].length();
                level++;
                continue;
            }
            s = sa[i].substring(level);
            if(s.contains("\t")){
                level++;
                st.push(s.substring(1));
                len += s.length() - 1;
            }
            else{
                s = st.pop();
                if(s.contains(".")){
                    max = len+level > max? len+level:max;
                }
                len -= s.length();
                //s = sa[i].substring(level);
                //st.push(s.substring(level));
                //len += s.length();
                level--;
                i--;
                
            }
        }
        s = st.pop();
        if(s.contains(".")){
            max = len+level > max? len+level:max;
        }
        return max;
    }
}