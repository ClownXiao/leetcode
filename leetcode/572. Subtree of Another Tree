/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        return dfs(s, t);
    }
    
    public boolean dfs(TreeNode s, TreeNode t){
        if(s == null) return false;
        if(s.val == t.val){
            if(check(s, t))
                return true;
        }
        if(dfs(s.left, t)) return true;
        if(dfs(s.right, t)) return true;
        return false;
        
    }
    
    public boolean check(TreeNode s, TreeNode t){
        if((s == null && t != null) || (s!= null && t == null))
            return false;
        else if(s == null && t == null)
            return true;
        else return (s.val == t.val && check(s.left, t.left) && check(s.right, t.right));
    }
}