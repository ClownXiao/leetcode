public class Solution {

    public int[] searchRange(int[] nums, int target) {
        int[] rst = new int[2];
        rst = find(nums, 0, nums.length-1,target);
        if(rst[0] < 0 || rst[0] > nums.length-1 || rst[1] < 0 || rst[1] > nums.length-1)
        {
           rst[0] = rst[1] = -1; 
        }
        else if(nums[rst[0]] != target){
            rst[0] = rst[1] = -1;
        }
        return rst;
    }

    int[] find(int[] a, int start, int end, int target){
        int[] x = new int [2];
        if(start > end) {
            x[0] = start;
            x[1] = end;
            return x;
        }
        int mid = (start + end )/2;
        if(a[mid] == target){
             x[0] = find(a,start,mid-1,target)[0];
             x[1] = find(a,mid+1,end,target)[1];
            return x;
        }
        else if(a[mid] < target)
            return find(a,mid+1,end,target);
        else
            return find(a, start, mid -1, target);
    }
    
}